# -*- coding: utf-8 -*-
"""dvCalc.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jROhcK9ZM3j8cfr1GLVyfIc8OO03uBN9

### Impoting depencies
"""

import csv
import numpy as np

"""### Creating KBO object"""

class KBO:
  def __init__(self, name, a, e, i):
    self.a = a
    self.e = e
    self.i = i
    self.name = name

"""### Creating function calculating delta(velocity)"""

def dvCalc(kbo1, kbo2):
  ab = abs(2.5*(kbo1.a-kbo2.a)/(kbo1.a+kbo2.a))
  fe = abs(4*(kbo2.e-kbo1.e)/(kbo2.e+kbo1.e))
  kj = abs(4*(kbo2.i-kbo1.i)/(kbo2.i+kbo1.i))
  return ab + fe + kj

"""### Variables Decleration"""

url = 'https://raw.githubusercontent.com/kendreaditya/CollisionalAsteriosFamiliesResearch/master/src/data/tnoList.csv'
data = np.genfromtxt(url, delimiter = ",", names=True, dtype=None)
dvList = []

"""### Main code"""

for x in range(len(data)):
  for i in range(x+1, len(data)):
    k1 = KBO(data[x][0], data[x][2], data[x][3], data[x][4])
    k2 = KBO(data[i][0], data[i][2], data[i][3], data[i][4])
    dvList.append([dvCalc(k1, k2), k1.name, k2.name])